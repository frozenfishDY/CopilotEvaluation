//https://leetcode.com/problems/longest-palindromic-substring/discuss/4370460/6532971/
class Solution {
    public String longestPalindrome(String s) {
       HashMap<Integer,String>h=new HashMap<>();
       
        for(int i=0;i<s.length();i++){
            char ci=s.charAt(i);
            for(int j=i+1;j<s.length();j++){
                char cj=s.charAt(j);
                if(ci==cj){
                    String ss=s.substring(i,j+1);
                    if(palindrome(ss)){
                        h.put(ss.length(),ss);
                    }
                }
            }           
        }
        int max=0;
        for(int i:h.keySet()){
            max=Math.max(i,max);
        }
        if(h.isEmpty()){
            char c=s.charAt(0);
            return Character.toString(c);
        }
        return h.get(max);
    }
    public boolean palindrome(String s){
        StringBuilder sb=new StringBuilder(s);
        if(sb.reverse().toString().equals(s)) return true;
        return false;
    }
}